<Application x:Class="Bank.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Bank"
             xmlns:converters="clr-namespace:Bank.Converters"
             StartupUri="LoginWindow.xaml">
    <Application.Resources>
        
        <!--Стиль рамки основного окна-->
        <Style TargetType="local:MainWindow">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0" CornerRadius="20" GlassFrameThickness="0" NonClientFrameEdges="None" ResizeBorderThickness="5"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="local:LoginWindow">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0" CornerRadius="20" GlassFrameThickness="0" NonClientFrameEdges="None"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!--Value Converters-->
        <converters:YearConverter x:Key="YearConv"/>
        <converters:ImageConverter x:Key="ImgConv"/>
        <converters:CreditStatusConverter x:Key="CrdtStsConv"/>
        <converters:CreditStatusColor x:Key="CrdtClrConv"/>
        <converters:CreditStatusDecorations x:Key="CrdtDecoConv"/>
        <converters:PaymentStatusColor x:Key="PayStClr"/>
        <converters:AvailableBtnChck x:Key="AvaiblBtnChck"/>

        <!--Backgrounds-->
        <SolidColorBrush x:Key="MainBckgr" Color="#0A67A3"/>
        <SolidColorBrush x:Key="ScndBckgr" Color="#24587a"/>
        <SolidColorBrush x:Key="ThrdBckgr" Color="#03426a"/>
        <SolidColorBrush x:Key="ComboBoxBckgr" Color="#eaeaea"/>

        <!--Colors For Main Button-->
        <SolidColorBrush x:Key="MainBtnColor" Color="White"/>
        <SolidColorBrush x:Key="AdditionalBtnColor" Color="#3E97D1"/>
        <SolidColorBrush x:Key="AccentBtnColor" Color="#65A6D1"/>
        
        <!--Colors For Delete Button-->
        <SolidColorBrush x:Key="DelBtnColor" Color="#A30008"/>
        <SolidColorBrush x:Key="DelBtnAccentColor" Color="#BC2F36"/>

        <!--Main Button Style-->
        <Style TargetType="Button" x:Key="MainBtnStyle">
            <Setter Property="Background" Value="{StaticResource AdditionalBtnColor}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="12" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBtnColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Delete Button Style-->
        <Style TargetType="Button" x:Key="DeleteBtnStyle">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource DelBtnColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="12" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DelBtnAccentColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--White Button Style-->
        <Style TargetType="Button" x:Key="WhiteBtnStyle">
            <Setter Property="Background" Value="{StaticResource MainBtnColor}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  CornerRadius="12" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="WhiteSmoke"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground" Value="#FFB3B3B3"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template" Value="{DynamicResource DataGridRowControlTemplate1}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF262626"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#FF383838"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#FF333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGrid">
            <!--Make the border and grid lines a little less imposing-->
            <Setter Property="BorderBrush" Value="#DDDDDD" />
            <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
            <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <!--Highlight a grid row as the mouse passes over-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightCyan" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <!--Highlight selected rows-->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#ff66ccff" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#ff66ccff" />
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                        <!--Add some padding around the contents of a cell-->
                        <Setter Property="Padding" Value="4,3,4,3" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style TargetType="Control">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>

    

</Application>
